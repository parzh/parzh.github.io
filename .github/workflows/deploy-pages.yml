name: Deploy pages

on:
  push:
    branches: [develop]

env:
  BOT_GIT_NAME: Parzh (bot)
  BOT_GIT_EMAIL: ${{ secrets.BOT_GIT_EMAIL }}

jobs:
  deploy-coverage:
    name: Deploy coverage-report to /coverage-report
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.BOT_PERSONAL_ACCESS_TOKEN }}

      - name: Install npm dependencies
        run: npm ci

      - name: Collect coverage (and also test)
        run: npm run test:cov

      - uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: ./coverage/lcov-report

      - uses: actions/checkout@v2
        with:
          repository: parzh/coverage-report
          token: ${{ secrets.BOT_PERSONAL_ACCESS_TOKEN }}

      - name: Remove outdated content
        run: rm -rf ./*

      - uses: actions/download-artifact@v1
        with:
          name: coverage

      - name: Move files to the root folder
        run: |
          mv coverage/* .
          rmdir coverage

      - name: Configure Git for GitHub Actions
        run: |
          git config user.name "$BOT_GIT_NAME"
          git config user.email "$BOT_GIT_EMAIL"

      - name: Commit and describe changes
        run: |
          git add --all
          git commit --allow-empty -m "Coverage as of parzh/parzh.github.io@$GITHUB_SHA"

      - name: Publish coverage report
        run: git push origin master

  deploy:
    name: Deploy pages
    runs-on: ubuntu-18.04
    needs: deploy-coverage
    env:
      PAGES_DIST_DIR: dist
      GIT_REMOTE_NAME: origin

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.BOT_PERSONAL_ACCESS_TOKEN }}

      - name: Install npm dependencies
        run: npm ci

      - name: Configure Git for GitHub Actions
        run: |
          git config user.name "$BOT_GIT_NAME"
          git config user.email "$BOT_GIT_EMAIL"

      - name: Prepare 'master' branch in dist dir
        run: |
          git fetch "$GIT_REMOTE_NAME"
          git worktree add "$PAGES_DIST_DIR" master

      - name: Remove old contents of dist dir
        run: rm -rf dist/*

      - name: Build local 'master'
        run: npm run build

      - name: Track everything in dist dir
        working-directory: ./${{ env.PAGES_DIST_DIR }}
        run: git add --all

      - name: Commit changes to local 'master'
        working-directory: ./${{ env.PAGES_DIST_DIR }}
        run: git commit --allow-empty -m "Build from $GITHUB_SHA"

      - name: Sync local and remote 'master'
        working-directory: ./${{ env.PAGES_DIST_DIR }}
        run: git push "$GIT_REMOTE_NAME" master
